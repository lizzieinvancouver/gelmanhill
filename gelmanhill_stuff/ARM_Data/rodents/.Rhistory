mydata <- read.csv("fish.species.csv" , header=TRUE)
attach(mydata)
install.packages("swirl")
library("swirl")
swirl()
library(vegan)
install.packages("swirl")
swirl()
library(swirl)
swirl()
?picante
help(picante)
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
# Install Packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("ggplot2", "plyr", "dplyr", "tidyr", "tidytext",
"purrr", "Hmisc", "lme4","rstan","shinystan","picante")
ipak(packages)
?fixef
?ranef
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rstan, type="source")
install.packages("rstan, type= "source")
install.packages("rstan", type= "source")
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
rstan:::rstudio_stanc("Documents/Temporal Ecology/Stanleyi/nesting_ex.stan")
install.LaTeX2RTF(page_with_download_url = "http://sourceforge.net/projects/latex2rtf/", ...)
install.packages("LaTeX2RTF")
library(LaTeX2RTF)
install.LaTeX2RTF
install.LaTeX2RTF()
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores())
```
### Load and look at the data
```{r linear-regression-data}
load("kidiq.rda")
head(kidiq)
```
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```{r plot1}
```{r plot1}
library("rstan")
library("ggplot2")
install_packages("bayesplot")
install_package("bayesplot")
install.packages("bayesplot")
install.packages("bayesplot")
install.packages("rstanarm")
install.packages("rstanarm")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("ggplot2")
install.packages("ggplot2")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("rstan")
install.packages("rstan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
```{r plot2}
mod1 <- stan_model("linear-regression.stan")
mod1 <- stan("linear-regression.stan")
mod1 <- stan_model("~/Downloads/linear-regression.stan")
mod1 <- stan("~/Downloads/linear-regression.stan")
mod1 <- stan_model("~/Documents/linear-regression.stan")
mod1 <- stan("~/Documents/linear-regression.stan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
library("bayesplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("acepack", "ape", "broom", "car", "chillR", "chron", "class", "cluster", "coda", "codetools", "colorspace", "corrplot", "crayon", "curl", "data.table", "date", "DBI", "dfoptim", "digest", "evaluate", "foreign", "gamm4", "ghit", "git2r", "githubinstall", "gtable", "Hmisc", "httr", "janeaustenr", "jsonlite", "knitr", "lattice", "latticeExtra", "manipulate", "maptools", "MASS", "Matrix", "matrixStats", "memisc", "mgcv", "mime", "mnormt", "munsell", "nlme", "nnet", "numDeriv", "openssl", "optextras", "packrat", "pbapply", "permute", "proto", "psych", "quantreg", "R6", "Rcpp", "RcppEigen", "RefManageR", "reshape2", "rmarkdown", "rsconnect", "shiny", "shinyjs", "shinythemes", "SparseM", "spatial", "stringi", "survival", "tibble", "tidyr", "tidytext", "tokenizers", "ucminf", "vegan", "XML", "yaml", "zoo"))
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(rstanarm)
setwd("~/Documents/git/springfreeze/input")
df<-read.csv("all.lat.csv", header=TRUE)
mat<-read.csv("matrix.lat.csv",header=TRUE, check.names=FALSE)
mat<-mat %>%
gather(year, fs, -Station)
df2<-mat%>%
filter(mat$year!="Total")%>%
filter(Station!="Total")
d<-full_join(df, mat, by="Station")
d<-d %>%
filter(Station!="Total")%>%
filter(year!="Total")
d$frost<-ifelse(d$fs==0, NA, d$fs)
d<-na.omit(d)
d<-dplyr::select(d,-hf.gdd, -fs)
fs<-as.data.frame(table(d$year))%>%
rename(year=Var1)%>%
rename(fs=Freq)
lat<-as.data.frame(table(d$Latitude))%>%
rename(Latitude=Var1)%>%
rename(false.spring=Freq)
lat$Latitude<-as.numeric(as.character(lat$Latitude))
d1<-full_join(d,fs,by="year")
d1<-full_join(d1,lat,by="Latitude")
d1$year<-as.numeric(as.character(d1$year))
View(d1)
mod2<-lmer(frost~year+Longitude+(1|Latitude))
mod2<-lmer(frost~year+Longitude+(1|Latitude), data=d1)
mod2<-lmer(frost~year+(1|Latitude), data=d1)
mod2<-lmer(Station~year+(1|Latitude), data=d1)
mod2<-lmer(count(Station)~year+(1|Latitude), data=d1)
mod2<-lmer(false.spring~year+(1|Latitude), data=d1)
mod2<-lmer(year~Longitude+(1|Latitude), data=d1)
summary(mod2)
mod2<-lmer(year~Latitude+(1|Station), data=d1)
summary(mod2)
View(df)
View(df2)
df<-read.csv("all.lat.csv", header=TRUE)
mat<-read.csv("matrix.lat.csv",header=TRUE, check.names=FALSE)
mat<-mat %>%
gather(year, fs, -Station)
df2<-mat%>%
filter(mat$year!="Total")%>%
filter(Station!="Total")
d<-full_join(df, mat, by="Station")
View(d)
mod2<-lmer(hf.gdd~year+(1|Station), data=d)
mod2<-lmer(fs~year+(1|Station), data=d, link="logit")
mod2<-lmer(fs~year+(1|Station), data=d, family=binomial(link="logit"))
mod2<-glmer(fs~year+(1|Station), data=d, family=binomial(link="logit"))
d<-d %>%
filter(Station!="Total")%>%
filter(year!="Total")
View(d)
mod2<-lmer(fs~year+(1|Station), data=d, family=binomial(link="logit"))
mod2<-glmer(fs~year+(1|Station), data=d, family=binomial(link="logit"))
mod2<-lmer(fs~year+(1|Station), data=d)
summary(mod2)
mod3<-lmer(fs~Latitude+Longitude+(1|year), data=d, family=binomial(link="logit"))
mod3<-lmer(fs~Latitude+Longitude+(1|year), data=d)
summary(mod3)
region<-station[Latitude]
region<-Station[Latitude]
region<-d$Station[d$Latitude]
region
View(lat)
region<-lat$Latitude[lat$false.spring]
region
region<-lat$false.spring[lat$Latitude]
region
View(df2)
View(df)
reg<-df$region[df$Station]
reg
reg<-df$Station[df$region]
reg
reg<-df$region[df$hf.gdd]
reg
d$continent<-ifelse(d$region=="europe",0,1)
View(d)
mod4<-lmer(fs~continent+(1|Latitude)+(1|Longitude) + (1|year), family=binomial(link="logit"))
mod4<-glmer(fs~continent+(1|Latitude)+(1|Longitude) + (1|year), family=binomial(link="logit"))
mod4<-glmer(fs~continent+(1|Latitude), data=d, family=binomial(link="logit"))
mod4<-lmer(fs~continent+(1|Latitude), data=d, family=binomial(link="logit"))
mod4
display(mod4)
mod4<-glmer(fs~continent+(1|Latitude)+(1+Station|year), data=d, family=binomial(link="logit"))
mod4<-glmer(fs~continent+(1|Latitude)+year*Station, data=d)
mod4<-lmer(fs~continent+(1|Latitude)+year*Station, data=d)
display(mod4)
mod4<-lmer(fs~continent+year:Latitude+(1|Station), data=d)
display(mod4)
mod4<-lmer(fs~Station+(1|year), data=d)
display(mod4)
mod4<-lmer(fs~year+(1|Latitude), data=d)
mod4<-lmer(fs~Station+(1|year), data=d)
display(mod4)
mod4<-lmer(fs~year+(1|Latitude), data=d)
display(mod4)
mod4<-lm(fs~Station+year:region), data=d)
mod4<-lm(fs~Station+year:region, data=d)
display(mod4)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
# Set Working Directory
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/rodents")
d<-read.csv("hvs02_unsorted.csv", header=TRUE)
View(d)
mod<-lmer(rodent2~old+(1|cd),data=d, family=binomial(link="logit"))
mod<-glmer(rodent2~old+(1|cd),data=d, family=binomial(link="logit"))
display(mod)
mod<-glmer(rodent2~old+race+(1|borough),data=d, family=binomial(link="logit"))
d<-read.csv("hvs02_sorted.csv", header=TRUE)
mod<-glmer(rodent2~old+race+(1|borough),data=d, family=binomial(link="logit"))
mod<-glmer(rodent2~old+race+(1|borough),data=d, family=binomial(link="logit"))
display(mod)
L <- nrow (d)
y.pred <- array (NA, c(n.sims, L))
n.sims<-1000
y.pred <- array (NA, c(n.sims, L))
for (i in 1:L){
y.pred[,i] <- invlogit(b.0 + b.old*d$old[i] + b.race*d$race[i] +
a.cd[,d$cd[i]] + a.borough[,d$borough[i]])
}
mod1<-glmer(rodent2~old+race+(cd|borough), data=d, family=binomial(link="logit"))
display(mod1)
coef$mod1
summary(coef$mod1)
coef(mod1)
mod1<-glmer(rodent2~old+race+(borough|cd)+(1|cd), data=d, family=binomial(link="logit"))
display(mod1)
plot(mod1)
mod1<-glmer(rodent2~old+race+(1+housing|cd)+(1|cd), data=d, family=binomial(link="logit"))
display(mod1)
